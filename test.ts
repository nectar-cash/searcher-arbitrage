import { BigNumber } from './deps.ts'
import { config } from './deps.ts'

import { processTransaction } from './SearcherArbitrage.ts'

// Buying Test Token with ETH
// exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))
const swapCall =
  '0x5ae401dc00000000000000000000000000000000000000000000000000000000638c889c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e404e45aaf000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d600000000000000000000000030efddec56be2987bf5902ce791425465266e8390000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000003bf0282b0199d486c4abc76298c0f3dbdfa7745500000000000000000000000000000000000000000000000000b1a2bc2ec500000000000000000000000000000000000000000000000000021e503beb3b2128af000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'

// Buying ETH with Test Token (aka, Selling Test Token)
// exactInputSingle((address,address,uint24,address,uint256,uint256,uint160)) + unwrapWETH9(uint256,address)
// TODO this should fail, because this reduces, not increases token price.
const bwt =
  '0x5ae401dc000000000000000000000000000000000000000000000000000000006384c9b4000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000e404e45aaf00000000000000000000000030efddec56be2987bf5902ce791425465266e839000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d60000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000a688906bd8b00000000000000000000000000000000000000000000000000000002a1de55e582082000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004449404b7c000000000000000000000000000000000000000000000000002a1de55e5820820000000000000000000000003bf0282b0199d486c4abc76298c0f3dbdfa7745500000000000000000000000000000000000000000000000000000000'

// const sellforeth =
//   '0x5ae401dc000000000000000000000000000000000000000000000000000000006384ad58000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000e404e45aaf00000000000000000000000030efddec56be2987bf5902ce791425465266e839000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d60000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000001158e460913d000000000000000000000000000000000000000000000000000000046012bf12e7027000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004449404b7c0000000000000000000000000000000000000000000000000046012bf12e70270000000000000000000000003bf0282b0199d486c4abc76298c0f3dbdfa7745500000000000000000000000000000000000000000000000000000000'

// approve: 0x095ea7b300000000000000000000000068b3465833fb72a70ecdf485e0e4c7bd8665fc45ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

// Buying UNI with ETH
// exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))
// Tx not on test pool
const buyWithEthCall =
  '0x5ae401dc0000000000000000000000000000000000000000000000000000000062f37fa700000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e404e45aaf000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d60000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f98400000000000000000000000000000000000000000000000000000000000001f400000000000000000000000052d1c1f980482faf8fc7efaf76652313b2a662e2000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000000030c4c599a857a8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'

// const sellToEthCallWithSelfPermit =
//   '0x5ae401dc0000000000000000000000000000000000000000000000000000000062f37ed40000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000000c4f3995c670000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f9840000000000000000000000000000000000000000000000000031be788907a4f40000000000000000000000000000000000000000000000000000000062f38375000000000000000000000000000000000000000000000000000000000000001c074076a7e0cf8ad14a8f5fcbe81d6e018419fc12afdc7d6c0a876966f74ce5a25d6a02326436c77b307bbc2e91eaeabe462e3bad98383cbe8d03a512ff087eae0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e404e45aaf0000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f984000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d600000000000000000000000000000000000000000000000000000000000001f400000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000031be788907a4f40000000000000000000000000000000000000000000000000022cbb39a325a94000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004449404b7c0000000000000000000000000000000000000000000000000022cbb39a325a9400000000000000000000000052d1c1f980482faf8fc7efaf76652313b2a662e200000000000000000000000000000000000000000000000000000000'

// const sellToEthCallWithoutSelfPermit =
//   '0x5ae401dc0000000000000000000000000000000000000000000000000000000062e2725f000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000e404e45aaf000000000000000000000000dc31ee1784292379fbb2964b3b9c4124d8f89c60000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d600000000000000000000000000000000000000000000000000000000000001f40000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000004e1003b28d92800000000000000000000000000000000000000000000000000000000003663ef133c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004449404b7c0000000000000000000000000000000000000000000000000000003663ef133c000000000000000000000000d365d5f31a7887639dd04832ed75fbbe9557360000000000000000000000000000000000000000000000000000000000'

// no exactInputSingle
// exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160)) + refundETH()
const buywWETH =
  '0x5ae401dc000000000000000000000000000000000000000000000000000000006384c990000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000e45023b4df000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d600000000000000000000000030efddec56be2987bf5902ce791425465266e8390000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000003bf0282b0199d486c4abc76298c0f3dbdfa77455000000000000000000000000000000000000000000000000a688906bd8b00000000000000000000000000000000000000000000000000000002b25b870d27049000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000412210e8a00000000000000000000000000000000000000000000000000000000'

// exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160)) unwrapWETH9(uint256,address)
// const bwe =
//   '0x5ae401dc000000000000000000000000000000000000000000000000000000006384a8cc000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000e45023b4df00000000000000000000000030efddec56be2987bf5902ce791425465266e839000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d60000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000008c629c3512911fa9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004449404b7c000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000003bf0282b0199d486c4abc76298c0f3dbdfa7745500000000000000000000000000000000000000000000000000000000'

// Sushi is not multicalls
// const sushiforeth =
//   '0x18cbafe50000000000000000000000000000000000000000000000008ac7230489e8000000000000000000000000000000000000000000000000000000231abd4d9cbc2d00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000003bf0282b0199d486c4abc76298c0f3dbdfa77455000000000000000000000000000000000000000000000000000000006384a92c000000000000000000000000000000000000000000000000000000000000000200000000000000000000000030efddec56be2987bf5902ce791425465266e839000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d6'
// const sushifortoken =
//   '0xfb3bdb410000000000000000000000000000000000000000000000008ac7230489e8000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000003bf0282b0199d486c4abc76298c0f3dbdfa77455000000000000000000000000000000000000000000000000000000006384a9500000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d600000000000000000000000030efddec56be2987bf5902ce791425465266e839'

// Approving token spending on Uniswap router:
// 0x095ea7b300000000000000000000000068b3465833fb72a70ecdf485e0e4c7bd8665fc45ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

const testCases: { [key: string]: string } = {
  'Buying Test Token with ETH': swapCall,
  'Selling Test Token for ETH': bwt,
  'Buy, but wrong Test Token': buyWithEthCall,
  'exactOutputSingle, not Input': buywWETH,
}

for (const testCase of Object.keys(testCases)) {
  console.log('-'.repeat(64))
  console.log('Test Case:', testCase)
  const _bundle = await processTransaction(
    '0x517f0d6e89a6a94e84a0e6de575a6bd6a59c112d14e4d44abf996aa7930d2ed2',
    {
      chainId: 5,
      nonce: 16,
      from: config()['USER_ADDRESS']!,
      to: config()['UNISWAP_V3_ROUTER']!,
      data: testCases[testCase],
      value: BigNumber.from('0x58d15e17628000'),
      gasLimit: BigNumber.from('0x59682f000'),
      maxPriorityFeePerGas: BigNumber.from('0x59682f00'),
      maxFeePerGas: BigNumber.from('0x59682f0b'),
    },
    '0x8B74FCF4a58b1344711E5d4F0335542803786bcF'
  )
}
